/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pdc.part.pkg2;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.JFrame;


/**
 *
 * @author elija
 */
public class MainFrame extends javax.swing.JFrame 
{

    /**
     * @return the trainLineList
     */
    public javax.swing.JList getTrainLineList() {
        return trainLineList;
    }

    /**
     * @param trainLineList the trainLineList to set
     */
    public void setTrainLineList(javax.swing.JList trainLineList) {
        this.trainLineList = trainLineList;
    }
    //Variables
    private TrainDataModel trainData = new TrainDataModel();
    
    //FOR Database
    Connection conn;
    String url = "jdbc:derby:TrainBookingDB; create=true";
    String username = "pdc";
    String password = "pdc";
    Statement statement;
    DatabaseMetaData database;
    ResultSet rs;
    SelectSeatsFrame selectSeats ;
        
    DBManager data = new DBManager();
    
    //Constructors
    public MainFrame() 
    {
        initComponents();
        headerLogOutButton.setVisible(false);
        this.setTitle("NZT Train Booking Program");
        
        try
        {
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to the database.");
        }
        catch (SQLException e)
        {
            System.err.println("Error connecting to the database: " + e.getMessage());
        }
    }

    
    //Methods
    
    public TrainDataModel getTrainData()
    {
        return this.trainData;
    }
    
    //Train Service
    public void recordTrainService()
    {
        if(this.getTrainData().getChosenService() == this.getTrainData().getPolarExpressService())
        {
            this.getTrainData().getUserBookedServiceLine()[0] = 2;
            
        }
        else if(this.getTrainData().getChosenService() == this.getTrainData().getAlleyExpressService())
        {
            this.getTrainData().getUserBookedServiceLine()[0] = 1;
        }
    }
    
    //Train Line
    public void recordTrainLine()
    {
        this.getTrainData().getUserBookedServiceLine()[1] = getTrainLineList().getSelectedIndex();
    }
    
    //Train Seat
    public void recordSeat()
    {
        
    }
    
    //Add to Booked Seat List
    public void addToBookedSeatList()
    {
        this.getTrainData().getBookedSeatList().add(this.getTrainData().getUserBookedServiceLine());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        mainHeaderTitle = new javax.swing.JLabel();
        headerLogOutButton = new javax.swing.JButton();
        cardLayoutPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        loginInnerPanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        createLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        userInputField = new javax.swing.JTextField();
        userPasswordField = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        registerPanel = new javax.swing.JPanel();
        registerLabel = new javax.swing.JLabel();
        fNameLabel = new javax.swing.JLabel();
        lNameLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        rPasswordLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        regisUserField = new javax.swing.JTextField();
        regisPasswordField = new javax.swing.JPasswordField();
        register_createButton = new javax.swing.JButton();
        register_backButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        bookingPanel = new javax.swing.JPanel();
        bookingHeader = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        bookAlleyExpress = new javax.swing.JButton();
        bookPolarExpress = new javax.swing.JButton();
        alleyExpressPanel = new javax.swing.JPanel();
        alleyExpressDescription = new javax.swing.JLabel();
        alleyExpressPicture = new javax.swing.JLabel();
        polarExpressPanel = new javax.swing.JPanel();
        polarExpressPicture = new javax.swing.JLabel();
        polarExpressDescription = new javax.swing.JLabel();
        trainLinePanel = new javax.swing.JPanel();
        descriptionLabel = new javax.swing.JLabel();
        descriptionLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        trainLineList = new javax.swing.JList();
        trainLineButton = new javax.swing.JButton();
        trainLineBackButton = new javax.swing.JButton();
        chooseSeatPanel = new javax.swing.JPanel();
        confirmSeatBackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        refreshChooseSeatsButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        confirmSeatsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        headerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        mainHeaderTitle.setBackground(new java.awt.Color(51, 153, 255));
        mainHeaderTitle.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        mainHeaderTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainHeaderTitle.setText("NZT Train Booking Program");
        mainHeaderTitle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        headerLogOutButton.setText("Log Out");
        headerLogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headerLogOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addComponent(mainHeaderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(headerLogOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainHeaderTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerLogOutButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(headerPanel, java.awt.BorderLayout.PAGE_START);

        cardLayoutPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cardLayoutPanel.setPreferredSize(new java.awt.Dimension(700, 400));
        cardLayoutPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setLayout(new java.awt.BorderLayout());

        loginLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        loginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginLabel.setText("Login Page");

        loginButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        createLabel.setText("Don't have an account? Create an account here:");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        userNameLabel.setText("Username");

        passwordLabel.setText("Password");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel3.setText("NZT Train Booking Company 2020. All rights reserved");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/loginPanelTrainPhoto.jpg"))); // NOI18N

        javax.swing.GroupLayout loginInnerPanelLayout = new javax.swing.GroupLayout(loginInnerPanel);
        loginInnerPanel.setLayout(loginInnerPanelLayout);
        loginInnerPanelLayout.setHorizontalGroup(
            loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginInnerPanelLayout.createSequentialGroup()
                .addGroup(loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginInnerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createButton)
                            .addComponent(createLabel)
                            .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(loginInnerPanelLayout.createSequentialGroup()
                                .addComponent(userNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(userInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loginInnerPanelLayout.createSequentialGroup()
                                .addComponent(passwordLabel)
                                .addGap(18, 18, 18)
                                .addComponent(userPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(loginInnerPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(42, 42, 42))
        );
        loginInnerPanelLayout.setVerticalGroup(
            loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginInnerPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginInnerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(loginInnerPanelLayout.createSequentialGroup()
                        .addGroup(loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameLabel)
                            .addComponent(userInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(loginInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel)
                            .addComponent(userPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(loginButton)
                        .addGap(23, 23, 23)
                        .addComponent(createLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        loginPanel.add(loginInnerPanel, java.awt.BorderLayout.CENTER);

        cardLayoutPanel.add(loginPanel, "card5");

        registerLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        registerLabel.setText("REGISTER ACCOUNT");

        fNameLabel.setText("First Name:");

        lNameLabel.setText("Last Name:");

        userLabel.setText("Username:");

        rPasswordLabel.setText("Password:");

        firstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameFieldActionPerformed(evt);
            }
        });

        regisUserField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regisUserFieldActionPerformed(evt);
            }
        });

        register_createButton.setText("Create Account");
        register_createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_createButtonActionPerformed(evt);
            }
        });

        register_backButton.setText("Back to login");
        register_backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_backButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Already have an account?");

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerLabel)
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lNameLabel)
                                        .addComponent(fNameLabel))
                                    .addComponent(userLabel)
                                    .addComponent(rPasswordLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(regisPasswordField)
                                    .addComponent(regisUserField)
                                    .addComponent(lastNameField)
                                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 343, Short.MAX_VALUE))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addComponent(register_createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addComponent(register_backButton)))
                .addContainerGap())
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(registerLabel)
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameLabel)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNameLabel)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(regisUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rPasswordLabel)
                    .addComponent(regisPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(register_createButton)
                    .addComponent(register_backButton)
                    .addComponent(jLabel4))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        cardLayoutPanel.add(registerPanel, "card6");

        bookingPanel.setPreferredSize(new java.awt.Dimension(650, 428));

        bookingHeader.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bookingHeader.setText("Please choose a train service to book from:");

        bookAlleyExpress.setText("Book for Alley Express");
        bookAlleyExpress.setPreferredSize(new java.awt.Dimension(141, 23));
        bookAlleyExpress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAlleyExpressActionPerformed(evt);
            }
        });

        bookPolarExpress.setText("Book for Polar Express");
        bookPolarExpress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookPolarExpressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addComponent(bookPolarExpress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bookAlleyExpress, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookAlleyExpress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookPolarExpress))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        alleyExpressPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Alley Express Train Service", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        alleyExpressPanel.setPreferredSize(new java.awt.Dimension(300, 165));

        alleyExpressDescription.setText("<html>The Alley Express provides only the most comfortable and relaxing experiences for our passengers while passing through the natural wonders of the North Island. With train lines all around the North Island, we are able to give you easy  access to New Zealand's popular landmarks.</html> ");
        alleyExpressDescription.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        alleyExpressPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/alleyExpressLogoPhoto.jpg"))); // NOI18N

        javax.swing.GroupLayout alleyExpressPanelLayout = new javax.swing.GroupLayout(alleyExpressPanel);
        alleyExpressPanel.setLayout(alleyExpressPanelLayout);
        alleyExpressPanelLayout.setHorizontalGroup(
            alleyExpressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(alleyExpressDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alleyExpressPanelLayout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addComponent(alleyExpressPicture)
                .addGap(29, 29, 29))
        );
        alleyExpressPanelLayout.setVerticalGroup(
            alleyExpressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alleyExpressPanelLayout.createSequentialGroup()
                .addComponent(alleyExpressPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alleyExpressDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        polarExpressPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Polar Express Train Service", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        polarExpressPanel.setPreferredSize(new java.awt.Dimension(300, 264));

        polarExpressPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/polarExpressLogoPhoto.jpg"))); // NOI18N

        polarExpressDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        polarExpressDescription.setText("<html>Here at the Polar Express, we give our guests an  unforgettable experience of travelling around New Zealand's most  breathtaking views in the South Island. With a variety of train lines to choose from, we have a journey for everyone.</html> ");
        polarExpressDescription.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout polarExpressPanelLayout = new javax.swing.GroupLayout(polarExpressPanel);
        polarExpressPanel.setLayout(polarExpressPanelLayout);
        polarExpressPanelLayout.setHorizontalGroup(
            polarExpressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(polarExpressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(polarExpressDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(polarExpressPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(polarExpressPicture)
                .addGap(0, 75, Short.MAX_VALUE))
        );
        polarExpressPanelLayout.setVerticalGroup(
            polarExpressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(polarExpressPanelLayout.createSequentialGroup()
                .addComponent(polarExpressPicture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(polarExpressDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bookingPanelLayout = new javax.swing.GroupLayout(bookingPanel);
        bookingPanel.setLayout(bookingPanelLayout);
        bookingPanelLayout.setHorizontalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookingHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addComponent(polarExpressPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alleyExpressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bookingPanelLayout.setVerticalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addComponent(bookingHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(alleyExpressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(polarExpressPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cardLayoutPanel.add(bookingPanel, "card2");

        descriptionLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        descriptionLabel.setText("Select which train line you would like to book:");

        descriptionLabel2.setText("Available Train Lines");

        trainLineList.setModel(new javax.swing.AbstractListModel()
            {
                String[] strings = {"1","2","3","4"};
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane1.setViewportView(trainLineList);

            trainLineButton.setText("Choose Train Line");
            trainLineButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    trainLineButtonActionPerformed(evt);
                }
            });

            trainLineBackButton.setText("Back");
            trainLineBackButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    trainLineBackButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout trainLinePanelLayout = new javax.swing.GroupLayout(trainLinePanel);
            trainLinePanel.setLayout(trainLinePanelLayout);
            trainLinePanelLayout.setHorizontalGroup(
                trainLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(trainLinePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(trainLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(trainLinePanelLayout.createSequentialGroup()
                            .addGroup(trainLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(descriptionLabel)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(descriptionLabel2))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(trainLinePanelLayout.createSequentialGroup()
                            .addComponent(trainLineBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 375, Short.MAX_VALUE)
                            .addComponent(trainLineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34))))
            );
            trainLinePanelLayout.setVerticalGroup(
                trainLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(trainLinePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(descriptionLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(trainLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(trainLinePanelLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(trainLineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(trainLinePanelLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(trainLineBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(123, Short.MAX_VALUE))
            );

            cardLayoutPanel.add(trainLinePanel, "card3");

            confirmSeatBackButton.setText("Back");
            confirmSeatBackButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    confirmSeatBackButtonActionPerformed(evt);
                }
            });

            jLabel2.setText("A new window should pop up. If it doesn't, click here:");

            refreshChooseSeatsButton.setText("Choose Seats");
            refreshChooseSeatsButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    refreshChooseSeatsButtonActionPerformed(evt);
                }
            });

            jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
            jLabel5.setText("Choose Seats");

            confirmSeatsButton.setText("Confirm Seats");
            confirmSeatsButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    confirmSeatsButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout chooseSeatPanelLayout = new javax.swing.GroupLayout(chooseSeatPanel);
            chooseSeatPanel.setLayout(chooseSeatPanelLayout);
            chooseSeatPanelLayout.setHorizontalGroup(
                chooseSeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(chooseSeatPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(confirmSeatBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                    .addGroup(chooseSeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chooseSeatPanelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(305, 305, 305))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chooseSeatPanelLayout.createSequentialGroup()
                            .addComponent(confirmSeatsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())))
                .addGroup(chooseSeatPanelLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(refreshChooseSeatsButton)
                    .addGap(0, 0, Short.MAX_VALUE))
            );
            chooseSeatPanelLayout.setVerticalGroup(
                chooseSeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(chooseSeatPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5)
                    .addGap(18, 18, 18)
                    .addGroup(chooseSeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(refreshChooseSeatsButton))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                    .addGroup(chooseSeatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(confirmSeatBackButton)
                        .addComponent(confirmSeatsButton))
                    .addContainerGap())
            );

            cardLayoutPanel.add(chooseSeatPanel, "card5");

            getContentPane().add(cardLayoutPanel, java.awt.BorderLayout.CENTER);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    //Action Events
    
    //--- 1. Booking Train Service ---//
    
    //Book for Polar Express Button
    private void bookPolarExpressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookPolarExpressActionPerformed
        
        trainData.setChosenService(trainData.getPolarExpressService());
        
        getTrainLineList().setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = trainData.getPolarExpressTrainLines();
            @Override
            public int getSize() { return strings.length; }
            @Override
            public Object getElementAt(int i) { return strings[i]; }
        });
        
        recordTrainService();
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(trainLinePanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();
    }//GEN-LAST:event_bookPolarExpressActionPerformed

    //Book for Alley Express Button
    private void bookAlleyExpressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAlleyExpressActionPerformed
        
        trainData.setChosenService(trainData.getAlleyExpressService());
        
        getTrainLineList().setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = trainData.getAlleyExpressTrainLines();
            @Override
            public int getSize() { return strings.length; }
            @Override
            public Object getElementAt(int i) { return strings[i]; }
        });
        
        recordTrainService();
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(trainLinePanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();
    }//GEN-LAST:event_bookAlleyExpressActionPerformed

    
    //--- 2. Choose Train Line ---//
    
    //Choose Train Line
    private void trainLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainLineButtonActionPerformed
        
        if(getTrainLineList().getSelectedIndex() >= 0)
        { 
            //Set Chosen Line to user's choice
            trainData.setChosenLine(trainData.getChosenService().getTrainLine()[getTrainLineList().getSelectedIndex()]);

            cardLayoutPanel.removeAll();
            cardLayoutPanel.add(chooseSeatPanel);
            cardLayoutPanel.repaint();
            cardLayoutPanel.revalidate();
            
            recordTrainLine();
            
            selectSeats = new SelectSeatsFrame(trainData);
        }
        else
        {
            infoMessage("Invalid train line selection. Please select a train line shown on the list above.", "ERROR");
        }
        
    }//GEN-LAST:event_trainLineButtonActionPerformed

    //Back Button
    private void trainLineBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainLineBackButtonActionPerformed
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(bookingPanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();
    }//GEN-LAST:event_trainLineBackButtonActionPerformed

    
    //Back Button
    private void confirmSeatBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmSeatBackButtonActionPerformed
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(trainLinePanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();
    }//GEN-LAST:event_confirmSeatBackButtonActionPerformed

    
    public void infoMessage(String message, String title)
    {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }
    
    
    //ACCESS REGISTER PANEL
    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed

        userInputField.setText(null);
        userPasswordField.setText(null);
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(registerPanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();

    }//GEN-LAST:event_createButtonActionPerformed

    //LOGIN FROM LOGIN PANEL
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        String userName = userInputField.getText();
        String userpassword = userPasswordField.getText();
        
        userInputField.setText(null);
        userPasswordField.setText(null);

        try
        {
            conn = DriverManager.getConnection(url, username, password);
            statement = conn.createStatement();
            String selectQuery = "select * from CUSTOMER where USERNAME = '" + userName + "' AND PASSWORD = '" + userpassword + "'";
            rs = statement.executeQuery(selectQuery);

            if(rs.next()){

                infoMessage("Login sucessful", "Welcome");

                cardLayoutPanel.removeAll();
                cardLayoutPanel.add(bookingPanel);
                cardLayoutPanel.repaint();
                cardLayoutPanel.revalidate();
                
                headerLogOutButton.setVisible(true);
            }
            else
            {
                infoMessage("Don't have an account? Please create one.", "ERROR");

                cardLayoutPanel.removeAll();
                cardLayoutPanel.add(registerPanel);
                cardLayoutPanel.repaint();
                cardLayoutPanel.revalidate();
            }
        }
        catch (SQLException er)
        {
            System.err.println("Error: " + er.getMessage());
        }

    }//GEN-LAST:event_loginButtonActionPerformed

    //BACK TO LOGIN PAGE FROM REGISTER PANEL
    private void register_backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_backButtonActionPerformed
        
        firstNameField.setText(null);
        lastNameField.setText(null);
        regisUserField.setText(null);
        regisPasswordField.setText(null);
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(loginPanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();
    }//GEN-LAST:event_register_backButtonActionPerformed

    //REGISTER CREATE ACCOUNT
    private void register_createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_createButtonActionPerformed

        //Get user input from textfield and save it into their respective variable
        String firstNameString = firstNameField.getText();
        String lastNameString = lastNameField.getText();
        String userNameFieldString = regisUserField.getText();
        String userPasswordFieldString = regisPasswordField.getText();
        
        try
        {
            conn = DriverManager.getConnection(url, username, password);
            statement = conn.createStatement();
            String selectQuery = "select * from CUSTOMER where USERNAME = '" + userNameFieldString + "' OR PASSWORD = '"
            + userPasswordField + "'";
            rs = statement.executeQuery(selectQuery);

            if(rs.next() == true)
            {
                infoMessage("USERNAME / PASSWORD ARE REGISTERED", "ALERT");
            }
            else if(firstNameString.isEmpty() || lastNameString.isEmpty() || userNameFieldString.isEmpty() || userPasswordFieldString.isEmpty())
            {
                infoMessage("PLEASE FILL IN EVERY ENTRY.", "ALERT");
            }
            else
            {
                data.insertCustomerTable(firstNameString, lastNameString, userNameFieldString, userPasswordFieldString);

                infoMessage("Information is inserted", "Success");

                firstNameField.setText(null);
                lastNameField.setText(null);
                regisUserField.setText(null);
                regisPasswordField.setText(null);
                
                cardLayoutPanel.removeAll();
                cardLayoutPanel.add(loginPanel);
                cardLayoutPanel.repaint();
                cardLayoutPanel.revalidate();
            }

        }
        catch (SQLException er)
        {
            System.err.println(er.getMessage());
        }

    }//GEN-LAST:event_register_createButtonActionPerformed

    private void regisUserFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regisUserFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regisUserFieldActionPerformed

    private void firstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameFieldActionPerformed

    private void headerLogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headerLogOutButtonActionPerformed
        
        cardLayoutPanel.removeAll();
        cardLayoutPanel.add(loginPanel);
        cardLayoutPanel.repaint();
        cardLayoutPanel.revalidate();
        
        headerLogOutButton.setVisible(false);
    }//GEN-LAST:event_headerLogOutButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        try
        {
            conn.close();
            System.out.println("Connection successfully closed.");
        }
        catch(SQLException e)
        {
            System.err.println("Error occured when closing connection: " + e.getMessage());
        }
    }//GEN-LAST:event_formWindowClosing

    private void refreshChooseSeatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshChooseSeatsButtonActionPerformed
        
        selectSeats = new SelectSeatsFrame(trainData);
        
    }//GEN-LAST:event_refreshChooseSeatsButtonActionPerformed

    //Confirm Seat Button
    private void confirmSeatsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmSeatsButtonActionPerformed
        
        trainData = selectSeats.confirmSeats(trainData);
        
        selectSeats.closeFrame();
        
        int index = getTrainLineList().getSelectedIndex();

        //Insert Code Here -- switch to next frame - the confirm seats frame
        ReceiptFrame receipt = new ReceiptFrame();
        receipt.getDisplayService().setText(trainData.getChosenService().getServiceName());
        receipt.getDisplayTrainLine().setText(trainData.getChosenService().getTrainLine()[index].toString());
        ///Problem
        
        ArrayList<int[]> testing = trainData.getUserCurrentBookedSeatList();
        int yCoordEconomy = trainData.getChosenService().getTrainLine()[index].getSeatGrid().getEconomyClassRows();
        int yCoordFirst = trainData.getChosenService().getTrainLine()[index].getSeatGrid().getFirstClassRows();
        int xCoord = trainData.getChosenService().getTrainLine()[index].getSeatGrid().getSeatNumber();
        
        
       // double priceEconomy = 0.0;
        //priceEconomy += trainData.getChosenService().getTrainLine()[index].getSeatGrid().getEconomyClass()[xCoord][yCoordEconomy].getSeatPrice();
        //double priceFirst = 0.0;
        //priceFirst += trainData.getChosenService().getTrainLine()[index].getSeatGrid().getFirstClass()[xCoord][yCoordFirst].getSeatPrice();
        
        double totalPrice = 0.0;
        totalPrice += trainData.getChosenService().getTrainLine()[index].getSeatGrid().getPrice();
        /*
        for(int x = 0; x < testing.size(); x++)
        {
            if(testing.get(x)[0] == 1) // polar
            {
               if(testing.get(x)[1]== 1) // firstclass
               {
                   price += trainData.getPolarExpressService().getTrainLine()[index].getSeatGrid().getFirstClass()[xCoord][yCoordFirst].getTotalPrice();
               }
               else if(testing.get(x)[1] == 2)//economyclass
               {
                    price += trainData.getPolarExpressService().getTrainLine()[index].getSeatGrid().getEconomyClass()[xCoord][yCoordEconomy].getTotalPrice();
               }
            }
            else if(testing.get(x)[0] == 2)
            {
                if(testing.get(x)[1]== 1) // firstclass
               {
                   price += trainData.getAlleyExpressService().getTrainLine()[index].getSeatGrid().getFirstClass()[xCoord][yCoordFirst].getTotalPrice();
               }
               else if(testing.get(x)[1] == 2)//economyclass
               {
                    price += trainData.getAlleyExpressService().getTrainLine()[index].getSeatGrid().getEconomyClass()[xCoord][yCoordEconomy].getTotalPrice();
               }
            }
        } */
   
      receipt.getDisplayPrice().setText(String.valueOf(totalPrice));
       receipt.setLocationRelativeTo(null);
       receipt.setVisible(true);
    }//GEN-LAST:event_confirmSeatsButtonActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alleyExpressDescription;
    private javax.swing.JPanel alleyExpressPanel;
    private javax.swing.JLabel alleyExpressPicture;
    private javax.swing.JButton bookAlleyExpress;
    private javax.swing.JButton bookPolarExpress;
    private javax.swing.JLabel bookingHeader;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel cardLayoutPanel;
    private javax.swing.JPanel chooseSeatPanel;
    private javax.swing.JButton confirmSeatBackButton;
    private javax.swing.JButton confirmSeatsButton;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel createLabel;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel descriptionLabel2;
    private javax.swing.JLabel fNameLabel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JButton headerLogOutButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginInnerPanel;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel mainHeaderTitle;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel polarExpressDescription;
    private javax.swing.JPanel polarExpressPanel;
    private javax.swing.JLabel polarExpressPicture;
    private javax.swing.JLabel rPasswordLabel;
    private javax.swing.JButton refreshChooseSeatsButton;
    private javax.swing.JPasswordField regisPasswordField;
    private javax.swing.JTextField regisUserField;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JButton register_backButton;
    private javax.swing.JButton register_createButton;
    private javax.swing.JButton trainLineBackButton;
    private javax.swing.JButton trainLineButton;
    private javax.swing.JList trainLineList;
    private javax.swing.JPanel trainLinePanel;
    private javax.swing.JTextField userInputField;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JPasswordField userPasswordField;
    // End of variables declaration//GEN-END:variables
}
